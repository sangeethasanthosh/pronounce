{"version":3,"file":"common.js","mappings":";;;;;;;;;;;;;;;;AAAO,MAAM,cAAc,GAAG,EAAE,CAAC;AAC1B,MAAM,GAAG,GAAG,KAAK,CAAC;AAClB,MAAM,IAAI,GAAG,MAAM,CAAC;AACpB,MAAM,IAAI,GAAG,MAAM,CAAC;;;;;;;;;;;;;;;;ACHuB;AAE3C,MAAM,mBAAmB,GAAG,CAAC,GAAS,EAAc,EAAE;IAC3D,IAAI,OAAO,GAAe,IAAI,4DAAU,EAAE,CAAC;IAE3C,IAAI,GAAG,EAAE;QACP,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YAC7B,IAAI,GAAG,KAAK,MAAM,EAAE;gBAClB,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;aACtC;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,GAAG,CAAC,IAAI,EAAE;YACZ,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,GAAW,EAAE,EAAE;gBAC/B,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;YACxC,CAAC,CAAC,CAAC;SACJ;KACF;IAED,OAAO,OAAO,CAAC;AACjB,CAAC,CAAC;;;;;;;;;;;;;;;;ACpBF;;;GAGG;AACI,SAAS,SAAS,CAAI,CAA8B;IACzD,OAAO,CAAC,KAAK,SAAS,IAAI,CAAC,KAAK,IAAI,CAAC;AACvC,CAAC;AAEM,MAAM,SAAS,GAAG,CAAC,KAAa,EAAU,EAAE,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC","sources":["./src/main/webapp/app/config/pagination.constants.ts","./src/main/webapp/app/core/request/request-util.ts","./src/main/webapp/app/core/util/operators.ts"],"sourcesContent":["export const ITEMS_PER_PAGE = 20;\nexport const ASC = 'asc';\nexport const DESC = 'desc';\nexport const SORT = 'sort';\n","import { HttpParams } from '@angular/common/http';\n\nexport const createRequestOption = (req?: any): HttpParams => {\n  let options: HttpParams = new HttpParams();\n\n  if (req) {\n    Object.keys(req).forEach(key => {\n      if (key !== 'sort') {\n        options = options.set(key, req[key]);\n      }\n    });\n\n    if (req.sort) {\n      req.sort.forEach((val: string) => {\n        options = options.append('sort', val);\n      });\n    }\n  }\n\n  return options;\n};\n","/*\n * Function used to workaround https://github.com/microsoft/TypeScript/issues/16069\n * es2019 alternative `const filteredArr = myArr.flatMap((x) => x ? x : []);`\n */\nexport function isPresent<T>(t: T | undefined | null | void): t is T {\n  return t !== undefined && t !== null;\n}\n\nexport const filterNaN = (input: number): number => (isNaN(input) ? 0 : input);\n"],"names":[],"sourceRoot":"webpack:///"}