{"version":3,"file":"src_main_webapp_app_admin_user-management_user-management_module_ts.js","mappings":"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","sources":["./src/main/webapp/app/admin/user-management/delete/user-management-delete-dialog.component.ts","./src/main/webapp/app/admin/user-management/delete/user-management-delete-dialog.component.html","./src/main/webapp/app/admin/user-management/detail/user-management-detail.component.ts","./src/main/webapp/app/admin/user-management/detail/user-management-detail.component.html","./src/main/webapp/app/admin/user-management/list/user-management.component.ts","./src/main/webapp/app/admin/user-management/list/user-management.component.html","./src/main/webapp/app/admin/user-management/service/user-management.service.ts","./src/main/webapp/app/admin/user-management/update/user-management-update.component.ts","./src/main/webapp/app/admin/user-management/update/user-management-update.component.html","./src/main/webapp/app/admin/user-management/user-management.model.ts","./src/main/webapp/app/admin/user-management/user-management.module.ts","./src/main/webapp/app/admin/user-management/user-management.route.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { User } from '../user-management.model';\nimport { UserManagementService } from '../service/user-management.service';\n\n@Component({\n  selector: 'jhi-user-mgmt-delete-dialog',\n  templateUrl: './user-management-delete-dialog.component.html',\n})\nexport class UserManagementDeleteDialogComponent {\n  user?: User;\n\n  constructor(private userService: UserManagementService, private activeModal: NgbActiveModal) {}\n\n  cancel(): void {\n    this.activeModal.dismiss();\n  }\n\n  confirmDelete(login: string): void {\n    this.userService.delete(login).subscribe(() => {\n      this.activeModal.close('deleted');\n    });\n  }\n}\n","<form *ngIf=\"user\" name=\"deleteForm\" (ngSubmit)=\"confirmDelete(user.login!)\">\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title\">Confirm delete operation</h4>\n\n    <button type=\"button\" class=\"btn-close\" data-dismiss=\"modal\" aria-hidden=\"true\" (click)=\"cancel()\">&times;</button>\n  </div>\n\n  <div class=\"modal-body\">\n    <jhi-alert-error></jhi-alert-error>\n\n    <p>Are you sure you want to delete this User?</p>\n  </div>\n\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"cancel()\">\n      <fa-icon icon=\"ban\"></fa-icon>&nbsp;<span>Cancel</span>\n    </button>\n\n    <button type=\"submit\" class=\"btn btn-danger\"><fa-icon icon=\"times\"></fa-icon>&nbsp;<span>Delete</span></button>\n  </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { User } from '../user-management.model';\n\n@Component({\n  selector: 'jhi-user-mgmt-detail',\n  templateUrl: './user-management-detail.component.html',\n})\nexport class UserManagementDetailComponent implements OnInit {\n  user: User | null = null;\n\n  constructor(private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.route.data.subscribe(({ user }) => {\n      this.user = user;\n    });\n  }\n}\n","<div class=\"d-flex justify-content-center\">\n  <div class=\"col-8\">\n    <div *ngIf=\"user\">\n      <h2>\n        <span>User</span> [<strong>{{ user.login }}</strong\n        >]\n      </h2>\n\n      <dl class=\"row-md jh-entity-details\">\n        <dt><span>Login</span></dt>\n        <dd>\n          <span>{{ user.login }}</span>\n          <span *ngIf=\"user.activated\" class=\"badge bg-success\">Activated</span>\n          <span *ngIf=\"!user.activated\" class=\"badge bg-danger\">Deactivated</span>\n        </dd>\n\n        <dt><span>First Name</span></dt>\n        <dd>{{ user.firstName }}</dd>\n\n        <dt><span>Last Name</span></dt>\n        <dd>{{ user.lastName }}</dd>\n\n        <dt><span>Email</span></dt>\n        <dd>{{ user.email }}</dd>\n\n        <dt><span>Created By</span></dt>\n        <dd>{{ user.createdBy }}</dd>\n\n        <dt><span>Created Date</span></dt>\n        <dd>{{ user.createdDate | date: 'dd/MM/yy HH:mm' }}</dd>\n\n        <dt><span>Last Modified By</span></dt>\n        <dd>{{ user.lastModifiedBy }}</dd>\n\n        <dt><span>Last Modified Date</span></dt>\n        <dd>{{ user.lastModifiedDate | date: 'dd/MM/yy HH:mm' }}</dd>\n\n        <dt><span>Profiles</span></dt>\n        <dd>\n          <ul class=\"list-unstyled\">\n            <li *ngFor=\"let authority of user.authorities\">\n              <span class=\"badge bg-info\">{{ authority }}</span>\n            </li>\n          </ul>\n        </dd>\n      </dl>\n\n      <button type=\"submit\" routerLink=\"../../\" class=\"btn btn-info\"><fa-icon icon=\"arrow-left\"></fa-icon>&nbsp;<span>Back</span></button>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { HttpResponse, HttpHeaders } from '@angular/common/http';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { combineLatest } from 'rxjs';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { ASC, DESC, ITEMS_PER_PAGE, SORT } from 'app/config/pagination.constants';\nimport { AccountService } from 'app/core/auth/account.service';\nimport { Account } from 'app/core/auth/account.model';\nimport { UserManagementService } from '../service/user-management.service';\nimport { User } from '../user-management.model';\nimport { UserManagementDeleteDialogComponent } from '../delete/user-management-delete-dialog.component';\n\n@Component({\n  selector: 'jhi-user-mgmt',\n  templateUrl: './user-management.component.html',\n})\nexport class UserManagementComponent implements OnInit {\n  currentAccount: Account | null = null;\n  users: User[] | null = null;\n  isLoading = false;\n  totalItems = 0;\n  itemsPerPage = ITEMS_PER_PAGE;\n  page!: number;\n  predicate!: string;\n  ascending!: boolean;\n\n  constructor(\n    private userService: UserManagementService,\n    private accountService: AccountService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private modalService: NgbModal\n  ) {}\n\n  ngOnInit(): void {\n    this.accountService.identity().subscribe(account => (this.currentAccount = account));\n    this.handleNavigation();\n  }\n\n  setActive(user: User, isActivated: boolean): void {\n    this.userService.update({ ...user, activated: isActivated }).subscribe(() => this.loadAll());\n  }\n\n  trackIdentity(_index: number, item: User): number {\n    return item.id!;\n  }\n\n  deleteUser(user: User): void {\n    const modalRef = this.modalService.open(UserManagementDeleteDialogComponent, { size: 'lg', backdrop: 'static' });\n    modalRef.componentInstance.user = user;\n    // unsubscribe not needed because closed completes on modal close\n    modalRef.closed.subscribe(reason => {\n      if (reason === 'deleted') {\n        this.loadAll();\n      }\n    });\n  }\n\n  loadAll(): void {\n    this.isLoading = true;\n    this.userService\n      .query({\n        page: this.page - 1,\n        size: this.itemsPerPage,\n        sort: this.sort(),\n      })\n      .subscribe({\n        next: (res: HttpResponse<User[]>) => {\n          this.isLoading = false;\n          this.onSuccess(res.body, res.headers);\n        },\n        error: () => (this.isLoading = false),\n      });\n  }\n\n  transition(): void {\n    this.router.navigate(['./'], {\n      relativeTo: this.activatedRoute.parent,\n      queryParams: {\n        page: this.page,\n        sort: `${this.predicate},${this.ascending ? ASC : DESC}`,\n      },\n    });\n  }\n\n  private handleNavigation(): void {\n    combineLatest([this.activatedRoute.data, this.activatedRoute.queryParamMap]).subscribe(([data, params]) => {\n      const page = params.get('page');\n      this.page = +(page ?? 1);\n      const sort = (params.get(SORT) ?? data['defaultSort']).split(',');\n      this.predicate = sort[0];\n      this.ascending = sort[1] === ASC;\n      this.loadAll();\n    });\n  }\n\n  private sort(): string[] {\n    const result = [`${this.predicate},${this.ascending ? ASC : DESC}`];\n    if (this.predicate !== 'id') {\n      result.push('id');\n    }\n    return result;\n  }\n\n  private onSuccess(users: User[] | null, headers: HttpHeaders): void {\n    this.totalItems = Number(headers.get('X-Total-Count'));\n    this.users = users;\n  }\n}\n","<div>\n  <h2>\n    <span id=\"user-management-page-heading\" data-cy=\"userManagementPageHeading\">Users</span>\n\n    <div class=\"d-flex justify-content-end\">\n      <button class=\"btn btn-info me-2\" (click)=\"loadAll()\" [disabled]=\"isLoading\">\n        <fa-icon icon=\"sync\" [spin]=\"isLoading\"></fa-icon>\n        <span>Refresh List</span>\n      </button>\n      <button class=\"btn btn-primary jh-create-entity\" [routerLink]=\"['./new']\">\n        <fa-icon icon=\"plus\"></fa-icon> <span>Create a new User</span>\n      </button>\n    </div>\n  </h2>\n\n  <jhi-alert-error></jhi-alert-error>\n\n  <jhi-alert></jhi-alert>\n\n  <div class=\"table-responsive\" *ngIf=\"users\">\n    <table class=\"table table-striped\" aria-describedby=\"user-management-page-heading\">\n      <thead>\n        <tr jhiSort [(predicate)]=\"predicate\" [(ascending)]=\"ascending\" (sortChange)=\"transition()\">\n          <th scope=\"col\" jhiSortBy=\"id\"><span>ID</span> <fa-icon icon=\"sort\"></fa-icon></th>\n          <th scope=\"col\" jhiSortBy=\"login\"><span>Login</span> <fa-icon icon=\"sort\"></fa-icon></th>\n          <th scope=\"col\" jhiSortBy=\"email\"><span>Email</span> <fa-icon icon=\"sort\"></fa-icon></th>\n          <th scope=\"col\"></th>\n          <th scope=\"col\"><span>Profiles</span></th>\n          <th scope=\"col\" jhiSortBy=\"createdDate\"><span>Created Date</span> <fa-icon icon=\"sort\"></fa-icon></th>\n          <th scope=\"col\" jhiSortBy=\"lastModifiedBy\"><span>Last Modified By</span> <fa-icon icon=\"sort\"></fa-icon></th>\n          <th scope=\"col\" jhiSortBy=\"lastModifiedDate\"><span>Last Modified Date</span> <fa-icon icon=\"sort\"></fa-icon></th>\n          <th scope=\"col\"></th>\n        </tr>\n      </thead>\n      <tbody *ngIf=\"users\">\n        <tr *ngFor=\"let user of users; trackBy: trackIdentity\">\n          <td>\n            <a [routerLink]=\"['./', user.login, 'view']\">{{ user.id }}</a>\n          </td>\n          <td>{{ user.login }}</td>\n          <td>{{ user.email }}</td>\n          <td>\n            <button class=\"btn btn-danger btn-sm\" (click)=\"setActive(user, true)\" *ngIf=\"!user.activated\">Deactivated</button>\n            <button\n              class=\"btn btn-success btn-sm\"\n              (click)=\"setActive(user, false)\"\n              *ngIf=\"user.activated\"\n              [disabled]=\"!currentAccount || currentAccount.login === user.login\"\n            >\n              Activated\n            </button>\n          </td>\n          <td>\n            <div *ngFor=\"let authority of user.authorities\">\n              <span class=\"badge bg-info\">{{ authority }}</span>\n            </div>\n          </td>\n          <td>{{ user.createdDate | date: 'dd/MM/yy HH:mm' }}</td>\n          <td>{{ user.lastModifiedBy }}</td>\n          <td>{{ user.lastModifiedDate | date: 'dd/MM/yy HH:mm' }}</td>\n          <td class=\"text-end\">\n            <div class=\"btn-group\">\n              <button type=\"submit\" [routerLink]=\"['./', user.login, 'view']\" class=\"btn btn-info btn-sm\">\n                <fa-icon icon=\"eye\"></fa-icon>\n                <span class=\"d-none d-md-inline\">View</span>\n              </button>\n\n              <button type=\"submit\" [routerLink]=\"['./', user.login, 'edit']\" queryParamsHandling=\"merge\" class=\"btn btn-primary btn-sm\">\n                <fa-icon icon=\"pencil-alt\"></fa-icon>\n                <span class=\"d-none d-md-inline\">Edit</span>\n              </button>\n\n              <button\n                type=\"button\"\n                (click)=\"deleteUser(user)\"\n                class=\"btn btn-danger btn-sm\"\n                [disabled]=\"!currentAccount || currentAccount.login === user.login\"\n              >\n                <fa-icon icon=\"times\"></fa-icon>\n                <span class=\"d-none d-md-inline\">Delete</span>\n              </button>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n\n  <div *ngIf=\"users\">\n    <div class=\"d-flex justify-content-center\">\n      <jhi-item-count [params]=\"{ page: page, totalItems: totalItems, itemsPerPage: itemsPerPage }\"></jhi-item-count>\n    </div>\n\n    <div class=\"d-flex justify-content-center\">\n      <ngb-pagination\n        [collectionSize]=\"totalItems\"\n        [(page)]=\"page\"\n        [pageSize]=\"itemsPerPage\"\n        [maxSize]=\"5\"\n        [rotate]=\"true\"\n        [boundaryLinks]=\"true\"\n        (pageChange)=\"transition()\"\n      ></ngb-pagination>\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\nimport { createRequestOption } from 'app/core/request/request-util';\nimport { Pagination } from 'app/core/request/request.model';\nimport { IUser } from '../user-management.model';\n\n@Injectable({ providedIn: 'root' })\nexport class UserManagementService {\n  private resourceUrl = this.applicationConfigService.getEndpointFor('api/admin/users');\n\n  constructor(private http: HttpClient, private applicationConfigService: ApplicationConfigService) {}\n\n  create(user: IUser): Observable<IUser> {\n    return this.http.post<IUser>(this.resourceUrl, user);\n  }\n\n  update(user: IUser): Observable<IUser> {\n    return this.http.put<IUser>(this.resourceUrl, user);\n  }\n\n  find(login: string): Observable<IUser> {\n    return this.http.get<IUser>(`${this.resourceUrl}/${login}`);\n  }\n\n  query(req?: Pagination): Observable<HttpResponse<IUser[]>> {\n    const options = createRequestOption(req);\n    return this.http.get<IUser[]>(this.resourceUrl, { params: options, observe: 'response' });\n  }\n\n  delete(login: string): Observable<{}> {\n    return this.http.delete(`${this.resourceUrl}/${login}`);\n  }\n\n  authorities(): Observable<string[]> {\n    return this.http.get<string[]>(this.applicationConfigService.getEndpointFor('api/authorities'));\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { User } from '../user-management.model';\nimport { UserManagementService } from '../service/user-management.service';\n\n@Component({\n  selector: 'jhi-user-mgmt-update',\n  templateUrl: './user-management-update.component.html',\n})\nexport class UserManagementUpdateComponent implements OnInit {\n  user!: User;\n  authorities: string[] = [];\n  isSaving = false;\n\n  editForm = this.fb.group({\n    id: [],\n    login: [\n      '',\n      [\n        Validators.required,\n        Validators.minLength(1),\n        Validators.maxLength(50),\n        Validators.pattern('^[a-zA-Z0-9!$&*+=?^_`{|}~.-]+@[a-zA-Z0-9-]+(?:\\\\.[a-zA-Z0-9-]+)*$|^[_.@A-Za-z0-9-]+$'),\n      ],\n    ],\n    firstName: ['', [Validators.maxLength(50)]],\n    lastName: ['', [Validators.maxLength(50)]],\n    email: ['', [Validators.minLength(5), Validators.maxLength(254), Validators.email]],\n    activated: [],\n    langKey: [],\n    authorities: [],\n  });\n\n  constructor(private userService: UserManagementService, private route: ActivatedRoute, private fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.route.data.subscribe(({ user }) => {\n      if (user) {\n        this.user = user;\n        if (this.user.id === undefined) {\n          this.user.activated = true;\n        }\n        this.updateForm(user);\n      }\n    });\n    this.userService.authorities().subscribe(authorities => (this.authorities = authorities));\n  }\n\n  previousState(): void {\n    window.history.back();\n  }\n\n  save(): void {\n    this.isSaving = true;\n    this.updateUser(this.user);\n    if (this.user.id !== undefined) {\n      this.userService.update(this.user).subscribe({\n        next: () => this.onSaveSuccess(),\n        error: () => this.onSaveError(),\n      });\n    } else {\n      this.user.langKey = 'en';\n      this.userService.create(this.user).subscribe({\n        next: () => this.onSaveSuccess(),\n        error: () => this.onSaveError(),\n      });\n    }\n  }\n\n  private updateForm(user: User): void {\n    this.editForm.patchValue({\n      id: user.id,\n      login: user.login,\n      firstName: user.firstName,\n      lastName: user.lastName,\n      email: user.email,\n      activated: user.activated,\n      langKey: user.langKey,\n      authorities: user.authorities,\n    });\n  }\n\n  private updateUser(user: User): void {\n    user.login = this.editForm.get(['login'])!.value;\n    user.firstName = this.editForm.get(['firstName'])!.value;\n    user.lastName = this.editForm.get(['lastName'])!.value;\n    user.email = this.editForm.get(['email'])!.value;\n    user.activated = this.editForm.get(['activated'])!.value;\n    user.langKey = this.editForm.get(['langKey'])!.value;\n    user.authorities = this.editForm.get(['authorities'])!.value;\n  }\n\n  private onSaveSuccess(): void {\n    this.isSaving = false;\n    this.previousState();\n  }\n\n  private onSaveError(): void {\n    this.isSaving = false;\n  }\n}\n","<div class=\"d-flex justify-content-center\">\n  <div class=\"col-8\">\n    <form name=\"editForm\" role=\"form\" novalidate (ngSubmit)=\"save()\" [formGroup]=\"editForm\">\n      <h2 id=\"myUserLabel\">Create or edit a User</h2>\n\n      <div *ngIf=\"user\">\n        <jhi-alert-error></jhi-alert-error>\n\n        <div class=\"mb-3\" [hidden]=\"!user.id\">\n          <label>ID</label>\n          <input type=\"text\" class=\"form-control\" name=\"id\" formControlName=\"id\" readonly />\n        </div>\n\n        <div class=\"mb-3\">\n          <label class=\"form-label\">Login</label>\n          <input type=\"text\" class=\"form-control\" name=\"login\" formControlName=\"login\" />\n\n          <div *ngIf=\"editForm.get('login')!.invalid && (editForm.get('login')!.dirty || editForm.get('login')!.touched)\">\n            <small class=\"form-text text-danger\" *ngIf=\"editForm.get('login')?.errors?.required\"> This field is required. </small>\n\n            <small class=\"form-text text-danger\" *ngIf=\"editForm.get('login')?.errors?.maxlength\">\n              This field cannot be longer than 50 characters.\n            </small>\n\n            <small class=\"form-text text-danger\" *ngIf=\"editForm.get('login')?.errors?.pattern\">\n              This field can only contain letters, digits and e-mail addresses.\n            </small>\n          </div>\n        </div>\n\n        <div class=\"mb-3\">\n          <label class=\"form-label\">First Name</label>\n          <input type=\"text\" class=\"form-control\" name=\"firstName\" formControlName=\"firstName\" />\n\n          <div *ngIf=\"editForm.get('firstName')!.invalid && (editForm.get('firstName')!.dirty || editForm.get('firstName')!.touched)\">\n            <small class=\"form-text text-danger\" *ngIf=\"editForm.get('firstName')?.errors?.maxlength\">\n              This field cannot be longer than 50 characters.\n            </small>\n          </div>\n        </div>\n\n        <div class=\"mb-3\">\n          <label>Last Name</label>\n          <input type=\"text\" class=\"form-control\" name=\"lastName\" formControlName=\"lastName\" />\n\n          <div *ngIf=\"editForm.get('lastName')!.invalid && (editForm.get('lastName')!.dirty || editForm.get('lastName')!.touched)\">\n            <small class=\"form-text text-danger\" *ngIf=\"editForm.get('lastName')?.errors?.maxlength\">\n              This field cannot be longer than 50 characters.\n            </small>\n          </div>\n        </div>\n\n        <div class=\"mb-3\">\n          <label class=\"form-label\">Email</label>\n          <input type=\"email\" class=\"form-control\" name=\"email\" formControlName=\"email\" />\n\n          <div *ngIf=\"editForm.get('email')!.invalid && (editForm.get('email')!.dirty || editForm.get('email')!.touched)\">\n            <small class=\"form-text text-danger\" *ngIf=\"editForm.get('email')?.errors?.required\"> This field is required. </small>\n\n            <small class=\"form-text text-danger\" *ngIf=\"editForm.get('email')?.errors?.maxlength\">\n              This field cannot be longer than 100 characters.\n            </small>\n\n            <small class=\"form-text text-danger\" *ngIf=\"editForm.get('email')?.errors?.minlength\">\n              This field is required to be at least 5 characters.\n            </small>\n\n            <small class=\"form-text text-danger\" *ngIf=\"editForm.get('email')?.errors?.email\"> Your email is invalid. </small>\n          </div>\n        </div>\n\n        <div class=\"form-check\">\n          <label class=\"form-check-label\" for=\"activated\">\n            <input\n              class=\"form-check-input\"\n              [attr.disabled]=\"user.id === undefined ? 'disabled' : null\"\n              type=\"checkbox\"\n              id=\"activated\"\n              name=\"activated\"\n              formControlName=\"activated\"\n            />\n            <span>Activated</span>\n          </label>\n        </div>\n\n        <div class=\"mb-3\">\n          <label>Profiles</label>\n          <select class=\"form-control\" multiple name=\"authority\" formControlName=\"authorities\">\n            <option *ngFor=\"let authority of authorities\" [value]=\"authority\">{{ authority }}</option>\n          </select>\n        </div>\n      </div>\n\n      <div *ngIf=\"user\">\n        <button type=\"button\" class=\"btn btn-secondary\" (click)=\"previousState()\">\n          <fa-icon icon=\"ban\"></fa-icon>&nbsp;<span>Cancel</span>\n        </button>\n\n        <button type=\"submit\" [disabled]=\"editForm.invalid || isSaving\" class=\"btn btn-primary\">\n          <fa-icon icon=\"save\"></fa-icon>&nbsp;<span>Save</span>\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","export interface IUser {\n  id?: number;\n  login?: string;\n  firstName?: string | null;\n  lastName?: string | null;\n  email?: string;\n  activated?: boolean;\n  langKey?: string;\n  authorities?: string[];\n  createdBy?: string;\n  createdDate?: Date;\n  lastModifiedBy?: string;\n  lastModifiedDate?: Date;\n}\n\nexport class User implements IUser {\n  constructor(\n    public id?: number,\n    public login?: string,\n    public firstName?: string | null,\n    public lastName?: string | null,\n    public email?: string,\n    public activated?: boolean,\n    public langKey?: string,\n    public authorities?: string[],\n    public createdBy?: string,\n    public createdDate?: Date,\n    public lastModifiedBy?: string,\n    public lastModifiedDate?: Date\n  ) {}\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { SharedModule } from 'app/shared/shared.module';\nimport { UserManagementComponent } from './list/user-management.component';\nimport { UserManagementDetailComponent } from './detail/user-management-detail.component';\nimport { UserManagementUpdateComponent } from './update/user-management-update.component';\nimport { UserManagementDeleteDialogComponent } from './delete/user-management-delete-dialog.component';\nimport { userManagementRoute } from './user-management.route';\n\n@NgModule({\n  imports: [SharedModule, RouterModule.forChild(userManagementRoute)],\n  declarations: [\n    UserManagementComponent,\n    UserManagementDetailComponent,\n    UserManagementUpdateComponent,\n    UserManagementDeleteDialogComponent,\n  ],\n  entryComponents: [UserManagementDeleteDialogComponent],\n})\nexport class UserManagementModule {}\n","import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot, Routes } from '@angular/router';\nimport { Observable, of } from 'rxjs';\n\nimport { User, IUser } from './user-management.model';\nimport { UserManagementService } from './service/user-management.service';\nimport { UserManagementComponent } from './list/user-management.component';\nimport { UserManagementDetailComponent } from './detail/user-management-detail.component';\nimport { UserManagementUpdateComponent } from './update/user-management-update.component';\n\n@Injectable({ providedIn: 'root' })\nexport class UserManagementResolve implements Resolve<IUser> {\n  constructor(private service: UserManagementService) {}\n\n  resolve(route: ActivatedRouteSnapshot): Observable<IUser> {\n    const id = route.params['login'];\n    if (id) {\n      return this.service.find(id);\n    }\n    return of(new User());\n  }\n}\n\nexport const userManagementRoute: Routes = [\n  {\n    path: '',\n    component: UserManagementComponent,\n    data: {\n      defaultSort: 'id,asc',\n    },\n  },\n  {\n    path: ':login/view',\n    component: UserManagementDetailComponent,\n    resolve: {\n      user: UserManagementResolve,\n    },\n  },\n  {\n    path: 'new',\n    component: UserManagementUpdateComponent,\n    resolve: {\n      user: UserManagementResolve,\n    },\n  },\n  {\n    path: ':login/edit',\n    component: UserManagementUpdateComponent,\n    resolve: {\n      user: UserManagementResolve,\n    },\n  },\n];\n"],"names":[],"sourceRoot":"webpack:///"}